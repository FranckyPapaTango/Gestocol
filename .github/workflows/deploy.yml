# DEVOPS : CI/CD frontend + backend FastAPI
name: CI/CD Deploy Gestocol (Full stack)

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. R√©cup√©rer le code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Installer Node.js (Frontend)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3. Build frontend
      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build

      # ‚ö†Ô∏è On n‚Äôinstalle PAS Python sur le runner pour PROD (supprim√©)

      # 4. Package backend (tar dans /tmp)
      - name: Package backend
        run: |
          cd backend
          tar -czf /tmp/gestocol-backend.tar.gz .

      # 5. Configurer SSH
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      # 6. Ajouter le serveur aux known_hosts
      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      # 7. D√©ploiement frontend
      - name: Upload frontend static
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "rm -rf /var/www/gestocol/*"
          scp -r frontend/build/* ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/var/www/gestocol/

      # 8. Upload backend tar.gz
      - name: Upload backend archive
        run: |
          scp /tmp/gestocol-backend.tar.gz ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/tmp/gestocol-backend.tar.gz

      # 9. D√©ploiement backend en PROD avec python3 syst√®me
      - name: Deploy backend
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} 'bash -s' <<'EOF'
            set -e

            BACKEND_DIR="/opt/gestocol/backend"
            BACKUP_DIR="/opt/gestocol/backup"
            TMP_ARCHIVE="/tmp/gestocol-backend.tar.gz"
            LOG_PATH="$BACKEND_DIR/backend.log"

            echo "üì¶ Sauvegarde du backend actuel..."
            mkdir -p "$BACKUP_DIR"
            if [ -d "$BACKEND_DIR" ]; then
              rm -rf "$BACKUP_DIR/backup_backend"
              cp -r "$BACKEND_DIR" "$BACKUP_DIR/backup_backend"
            fi

            echo "üóë Suppression de l'ancien backend..."
            rm -rf "$BACKEND_DIR"

            echo "üì§ D√©ploiement du nouveau backend..."
            mkdir -p "$BACKEND_DIR"
            tar -xzf "$TMP_ARCHIVE" -C "$BACKEND_DIR"

            echo "üåø Cr√©ation du fichier .env"
            cat > "$BACKEND_DIR/.env" <<ENV_EOF
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          ENV_EOF

            echo "üñ• Cr√©ation / activation du venv avec python3 syst√®me"
            rm -rf "$BACKEND_DIR/venv"
            python3 -m venv "$BACKEND_DIR/venv"
            source "$BACKEND_DIR/venv/bin/activate"
            pip install --upgrade pip
            pip install -r "$BACKEND_DIR/requirements.txt"

            echo "üöÄ Arr√™t du backend s'il tourne et lib√©ration du port 8083"
            pkill -f "uvicorn.*gestocol" || true
            sudo fuser -k 8083/tcp || true

            echo "üöÄ Lancement du backend FastAPI avec nohup"
            nohup "$BACKEND_DIR/venv/bin/python" -m uvicorn main:app --host 0.0.0.0 --port 8083 > "$LOG_PATH" 2>&1 &

            sleep 5
            if pgrep -f "uvicorn.*gestocol" > /dev/null; then
              echo "‚úÖ Backend lanc√© correctement. Logs -> $LOG_PATH"
            else
              echo "‚ùå √âchec du d√©marrage du backend, rollback..."
              if [ -d "$BACKUP_DIR/backup_backend" ]; then
                rm -rf "$BACKEND_DIR"
                mv "$BACKUP_DIR/backup_backend" "$BACKEND_DIR"
                source "$BACKEND_DIR/venv/bin/activate"
                nohup "$BACKEND_DIR/venv/bin/python" -m uvicorn main:app --host 0.0.0.0 --port 8083 > "$LOG_PATH" 2>&1 &
                echo "‚úÖ Backend rollback lanc√© en nohup. Logs -> $LOG_PATH"
              fi
            fi
          EOF
